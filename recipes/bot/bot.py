from telegram import Update, ParseMode
from telegram.ext import Updater, CommandHandler, CallbackContext, CallbackQueryHandler
from recipes.models import Recipes, Category, Ingredients
from recipes.bot.keyboard import START_KEYBOARD, SUBSCRIPTION
from environs import Env
from config.settings import BOT_TOKEN
from django.utils import timezone
import datetime
import logging

INGREDIENTS = []
NUMBER_RECIPE_CHANGES = 2
TODAY = {}


def start(update: Update, _):
    global INGREDIENTS
    global NUMBER_RECIPE_CHANGES

    if NUMBER_RECIPE_CHANGES > 0:
        recipe = Recipes.objects.order_by('?').first()
        title = recipe.title
        image = recipe.image
        description = recipe.description
        category = recipe.category
        update.message.reply_photo(image)
        update.message.reply_text(
            f'<b>{title}\n\n</b>'
            f'{description}\n\n'
            f'<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {category}',
            reply_markup=START_KEYBOARD,
            parse_mode='HTML'
        )
        update.message.reply_text(
            '–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∑–∞–≤—Ç—Ä–∞? üçî ü´§\n\n'
            '–û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É, –∏ –º—ã –ø–æ–±–µ—Å–ø–æ–∫–æ–∏–º—Å—è –∑–∞ –≤–∞—Å ‚¨áÔ∏è',
            reply_markup=SUBSCRIPTION)
        INGREDIENTS.append(recipe)
    else:
        update.message.reply_text('–í—ã –º–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –Ω–µ –±–æ–ª–µ–µ –¥–≤—É—Ö —Ä–∞–∑ –∑–∞ —Å—É—Ç–∫–∏!\n\n'
                                  '<b>–•–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ –º–∞–∫—Å–∏–º—É–º—É, –∞ —Ç–∞–∫–∂–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é?\n\n</b>'
                                  '–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–∏—Å ‚¨áÔ∏è',
                                  reply_markup=SUBSCRIPTION,
                                  parse_mode='HTML')


def get_another_dish(update: Update, _):
    """–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ—Ü–µ–ø—Ç."""
    global INGREDIENTS
    global NUMBER_RECIPE_CHANGES
    global TODAY

    query = update.callback_query
    query.answer()

    if TODAY == {} or datetime.datetime.now().date() > TODAY['today']:
        NUMBER_RECIPE_CHANGES = 2

    if NUMBER_RECIPE_CHANGES > 0:
        TODAY['today'] = datetime.datetime.now().date()
        recipe = Recipes.objects.order_by('?').first()
        title = recipe.title
        image = recipe.image
        description = recipe.description
        category = recipe.category

        query.message.reply_photo(image)
        query.message.reply_text(
            f'<b>{title}\n\n</b>'
            f'{description}\n\n'
            f'<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {category}',
            reply_markup=START_KEYBOARD,
            parse_mode='HTML'
        )
        query.message.reply_text(
            '–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∑–∞–≤—Ç—Ä–∞? üçî ü´§\n\n'
            '–û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É, –∏ –º—ã –ø–æ–±–µ—Å–ø–æ–∫–æ–∏–º—Å—è –∑–∞ –≤–∞—Å ‚¨áÔ∏è',
            reply_markup=SUBSCRIPTION)
        INGREDIENTS.append(recipe)
        NUMBER_RECIPE_CHANGES -= 1
    else:
        query.message.reply_text('–í—ã –º–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –Ω–µ –±–æ–ª–µ–µ –¥–≤—É—Ö —Ä–∞–∑ –∑–∞ —Å—É—Ç–∫–∏!\n\n'
                                 '<b>–•–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ –º–∞–∫—Å–∏–º—É–º—É, –∞ —Ç–∞–∫–∂–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é?\n\n</b>'
                                 '–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–∏—Å ‚¨áÔ∏è',
                                 reply_markup=SUBSCRIPTION,
                                 parse_mode='HTML')


def get_dish_ingredients(update: Update, _):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –±–ª—é–¥–∞."""
    recipe = INGREDIENTS[-1]
    ingredients = recipe.ingredients.all()
    ingredients_title = [f'{ingredient.title}\n' for ingredient in ingredients]
    query = update.callback_query
    query.answer()

    query.edit_message_text(
        f'{recipe.title.upper()}\n\n<b>–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</b>\n\n{"".join(ingredients_title)}\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞ üòã',
        reply_markup=START_KEYBOARD,
        parse_mode='HTML')


def get_subscribe(update: Update, _):
    """–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É."""
    query = update.callback_query
    query.answer()

    query.message.reply_text(
        '–°–ø–∞—Å–∏–±–æ, –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–∏—Å ‚ù§Ô∏è\n\n'
        '–í—ã—à–µ –º—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –¥–ª—è –í–∞—Å –º–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è ‚¨ÜÔ∏è')
    query.message.reply_text(f'{query.data}')


def main():
    global TODAY
    global NUMBER_RECIPE_CHANGES

    env = Env()
    env.read_env()

    updater = Updater(token=BOT_TOKEN)

    dp = updater.dispatcher
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(CallbackQueryHandler(get_another_dish, pattern='another_dish'))
    dp.add_handler(CallbackQueryHandler(get_dish_ingredients, pattern='dish_ingredients'))
    # dp.add_handler(CallbackQueryHandler(get_subscribe, pattern='subscribe'))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
